pomdp

observables step,attentionPred,underPred endobservables

const int s_total = 6;
formula done = step = s_total;

module Turn
 step:[0..s_total] init 0;
 [observeUserAttention]   step=0 -> 1:(step'=1);
 [observeUserUnderstand] step=1 -> 1:(step'=2);
 [select_prompt_a1] step=2 -> 1:(step'=3);
 [select_prompt_a2] step=2 -> 1:(step'=3);
 [select_prompt_b1] step=3 -> 1:(step'=4);
 [select_prompt_b2] step=3 -> 1:(step'=4);
 [select_prompt_c1] step=4 -> 1:(step'=5);
 [select_prompt_c2] step=4 -> 1:(step'=5);
 [select_prompt_c3] step=4 -> 1:(step'=5);

 [end]step=5 ->1:(step'=s_total);
endmodule

const int profile=1;

const int low = 0;
const int high = 1;
const int non_expert = 1;
const int planning_expert = 2;
const int case_study_expert = 3;
const int max_prompt_inputs=3;

const double pHH=0.4;
const double pHL=0.1;
const double pLH=0.05;
const double pLL=1-pHH-pHL-pLH;
const double pHH_u=0.2;
const double pHL_u=0.05;
const double pLH_u=0.15;
const double pLL_u=1-pHH_u-pHL_u-pLH_u;

const double pHH_pe=0.6;
const double pHL_pe=0.24;
const double pLH_pe=0.05;
const double pLL_pe=1-pHH_pe-pHL_pe-pLH_pe;
const double pHH_u_pe=0.79;
const double pHL_u_pe=0.023;
const double pLH_u_pe=0.012;
const double pLL_u_pe=1-pHH_u_pe-pHL_u_pe-pLH_u_pe;

const double pHH_ce=0.16;
const double pHL_ce=0.03;
const double pLH_ce=0.29;
const double pLL_ce=1-pHH_ce-pHL_ce-pLH_ce;
const double pHH_u_ce=0.56;
const double pHL_u_ce=0.02;
const double pLH_u_ce=0.2;
const double pLL_u_ce=1-pHH_u_ce-pHL_u_ce-pLH_u_ce;

module HumanBehavioralModel
 attention:[0..1] init high;
 attentionPred:[0..1] init high;
 under:[0..1] init high;
 underPred:[0..1] init high;

 [observeUserAttention] profile=non_expert & step=0 -> pHH:(attention'=high)&(attentionPred'=high)+
            pHL:(attention'=high)&(attentionPred'=low)+
            pLH:(attention'=low)&(attentionPred'=high)+
            pLL:(attention'=low)&(attentionPred'=low);
 [observeUserUnderstand] profile=non_expert & step=1 -> pHH_u:(under'=high)&(underPred'=high)+
            pHL_u:(under'=high)&(underPred'=low)+
            pLH_u:(under'=low)&(underPred'=high)+
            pLL_u:(under'=low)&(underPred'=low);

 [observeUserAttention] profile=planning_expert & step=0 -> pHH_pe:(attention'=high)&(attentionPred'=high)+
            pHL_pe:(attention'=high)&(attentionPred'=low)+
            pLH_pe:(attention'=low)&(attentionPred'=high)+
            pLL_pe:(attention'=low)&(attentionPred'=low);
 [observeUserUnderstand] profile=planning_expert & step=1 -> pHH_u_pe:(under'=high)&(underPred'=high)+
            pHL_u_pe:(under'=high)&(underPred'=low)+
            pLH_u_pe:(under'=low)&(underPred'=high)+
            pLL_u_pe:(under'=low)&(underPred'=low);

 [observeUserAttention] profile=case_study_expert & step=0 -> pHH_ce:(attention'=high)&(attentionPred'=high)+
            pHL_ce:(attention'=high)&(attentionPred'=low)+
            pLH_ce:(attention'=low)&(attentionPred'=high)+
            pLL_ce:(attention'=low)&(attentionPred'=low);
 [observeUserUnderstand] profile=case_study_expert & step=1 -> pHH_u_ce:(under'=high)&(underPred'=high)+
            pHL_u_ce:(under'=high)&(underPred'=low)+
            pLH_u_ce:(under'=low)&(underPred'=high)+
            pLL_u_ce:(under'=low)&(underPred'=low);

endmodule

const int prompt_accepted_a1 = 5;
const int prompt_rejected_a1 = 4;
const int prompt_accepted_a2 = 10;
const int prompt_rejected_a2 = 1;
const int prompt_accepted_b1 = 2;
const int prompt_rejected_b1 = 7;
const int prompt_accepted_b2 = 15;
const int prompt_rejected_b2 = 3;
const int prompt_accepted_c1 = 23;
const int prompt_rejected_c1 = 6;
const int prompt_accepted_c2 = 1;
const int prompt_rejected_c2 = 12;
const int prompt_accepted_c3 = 14;
const int prompt_rejected_c3 = 13;
const int prompt_accepted_a1_pe = 8;
const int prompt_rejected_a1_pe = 7;
const int prompt_accepted_a2_pe = 3;
const int prompt_rejected_a2_pe = 4;
const int prompt_accepted_b1_pe = 25;
const int prompt_rejected_b1_pe = 2;
const int prompt_accepted_b2_pe = 5;
const int prompt_rejected_b2_pe = 16;
const int prompt_accepted_c1_pe = 11;
const int prompt_rejected_c1_pe = 12;
const int prompt_accepted_c2_pe = 29;
const int prompt_rejected_c2_pe = 8;
const int prompt_accepted_c3_pe = 5;
const int prompt_rejected_c3_pe = 4;
const int prompt_accepted_a1_ce = 36;
const int prompt_rejected_a1_ce = 1;
const int prompt_accepted_a2_ce = 9;
const int prompt_rejected_a2_ce = 14;
const int prompt_accepted_b1_ce = 44;
const int prompt_rejected_b1_ce = 3;
const int prompt_accepted_b2_ce = 15;
const int prompt_rejected_b2_ce = 14;
const int prompt_accepted_c1_ce = 4;
const int prompt_rejected_c1_ce = 2;
const int prompt_accepted_c2_ce = 3;
const int prompt_rejected_c2_ce = 3;
const int prompt_accepted_c3_ce = 50;
const int prompt_rejected_c3_ce = 2;

const double alpha0 = 1;
const double beta0 = 1;
const double b_min = 5;
const double b_max = 20;
const double kappa_okay = 0.75;
const double kappa_mismatch = 0.5;

const double alpha_non_expert = 0.88;
const double alpha_planning_expert = 0.88;
const double alpha_case_study_expert = 0.88;

formula r_non_a1 = (prompt_accepted_a1 + alpha0) / (prompt_accepted_a1 + prompt_rejected_a1 + alpha0 + beta0);
formula utility_non_a1_match = b_min + (b_max - b_min) * pow(r_non_a1, alpha_non_expert);
formula utility_non_a1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_non_a1, alpha_non_expert);
formula utility_non_a1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_non_a1, alpha_non_expert);

formula r_non_a2 = (prompt_accepted_a2 + alpha0) / (prompt_accepted_a2 + prompt_rejected_a2 + alpha0 + beta0);
formula utility_non_a2_match = b_min + (b_max - b_min) * pow(r_non_a2, alpha_non_expert);
formula utility_non_a2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_non_a2, alpha_non_expert);
formula utility_non_a2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_non_a2, alpha_non_expert);

formula r_non_b1 = (prompt_accepted_b1 + alpha0) / (prompt_accepted_b1 + prompt_rejected_b1 + alpha0 + beta0);
formula utility_non_b1_match = b_min + (b_max - b_min) * pow(r_non_b1, alpha_non_expert);
formula utility_non_b1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_non_b1, alpha_non_expert);
formula utility_non_b1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_non_b1, alpha_non_expert);

formula r_non_b2 = (prompt_accepted_b2 + alpha0) / (prompt_accepted_b2 + prompt_rejected_b2 + alpha0 + beta0);
formula utility_non_b2_match = b_min + (b_max - b_min) * pow(r_non_b2, alpha_non_expert);
formula utility_non_b2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_non_b2, alpha_non_expert);
formula utility_non_b2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_non_b2, alpha_non_expert);

formula r_non_c1 = (prompt_accepted_c1 + alpha0) / (prompt_accepted_c1 + prompt_rejected_c1 + alpha0 + beta0);
formula utility_non_c1_match = b_min + (b_max - b_min) * pow(r_non_c1, alpha_non_expert);
formula utility_non_c1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_non_c1, alpha_non_expert);
formula utility_non_c1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_non_c1, alpha_non_expert);

formula r_non_c2 = (prompt_accepted_c2 + alpha0) / (prompt_accepted_c2 + prompt_rejected_c2 + alpha0 + beta0);
formula utility_non_c2_match = b_min + (b_max - b_min) * pow(r_non_c2, alpha_non_expert);
formula utility_non_c2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_non_c2, alpha_non_expert);
formula utility_non_c2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_non_c2, alpha_non_expert);

formula r_non_c3 = (prompt_accepted_c3 + alpha0) / (prompt_accepted_c3 + prompt_rejected_c3 + alpha0 + beta0);
formula utility_non_c3_match = b_min + (b_max - b_min) * pow(r_non_c3, alpha_non_expert);
formula utility_non_c3_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_non_c3, alpha_non_expert);
formula utility_non_c3_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_non_c3, alpha_non_expert);

formula r_pe_a1 = (prompt_accepted_a1_pe + alpha0) / (prompt_accepted_a1_pe + prompt_rejected_a1_pe + alpha0 + beta0);
formula utility_pe_a1_match = b_min + (b_max - b_min) * pow(r_pe_a1, alpha_planning_expert);
formula utility_pe_a1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_pe_a1, alpha_planning_expert);
formula utility_pe_a1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_pe_a1, alpha_planning_expert);

formula r_pe_a2 = (prompt_accepted_a2_pe + alpha0) / (prompt_accepted_a2_pe + prompt_rejected_a2_pe + alpha0 + beta0);
formula utility_pe_a2_match = b_min + (b_max - b_min) * pow(r_pe_a2, alpha_planning_expert);
formula utility_pe_a2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_pe_a2, alpha_planning_expert);
formula utility_pe_a2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_pe_a2, alpha_planning_expert);

formula r_pe_b1 = (prompt_accepted_b1_pe + alpha0) / (prompt_accepted_b1_pe + prompt_rejected_b1_pe + alpha0 + beta0);
formula utility_pe_b1_match = b_min + (b_max - b_min) * pow(r_pe_b1, alpha_planning_expert);
formula utility_pe_b1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_pe_b1, alpha_planning_expert);
formula utility_pe_b1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_pe_b1, alpha_planning_expert);

formula r_pe_b2 = (prompt_accepted_b2_pe + alpha0) / (prompt_accepted_b2_pe + prompt_rejected_b2_pe + alpha0 + beta0);
formula utility_pe_b2_match = b_min + (b_max - b_min) * pow(r_pe_b2, alpha_planning_expert);
formula utility_pe_b2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_pe_b2, alpha_planning_expert);
formula utility_pe_b2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_pe_b2, alpha_planning_expert);

formula r_pe_c1 = (prompt_accepted_c1_pe + alpha0) / (prompt_accepted_c1_pe + prompt_rejected_c1_pe + alpha0 + beta0);
formula utility_pe_c1_match = b_min + (b_max - b_min) * pow(r_pe_c1, alpha_planning_expert);
formula utility_pe_c1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_pe_c1, alpha_planning_expert);
formula utility_pe_c1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_pe_c1, alpha_planning_expert);

formula r_pe_c2 = (prompt_accepted_c2_pe + alpha0) / (prompt_accepted_c2_pe + prompt_rejected_c2_pe + alpha0 + beta0);
formula utility_pe_c2_match = b_min + (b_max - b_min) * pow(r_pe_c2, alpha_planning_expert);
formula utility_pe_c2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_pe_c2, alpha_planning_expert);
formula utility_pe_c2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_pe_c2, alpha_planning_expert);

formula r_pe_c3 = (prompt_accepted_c3_pe + alpha0) / (prompt_accepted_c3_pe + prompt_rejected_c3_pe + alpha0 + beta0);
formula utility_pe_c3_match = b_min + (b_max - b_min) * pow(r_pe_c3, alpha_planning_expert);
formula utility_pe_c3_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_pe_c3, alpha_planning_expert);
formula utility_pe_c3_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_pe_c3, alpha_planning_expert);

formula r_ce_a1 = (prompt_accepted_a1_ce + alpha0) / (prompt_accepted_a1_ce + prompt_rejected_a1_ce + alpha0 + beta0);
formula utility_ce_a1_match = b_min + (b_max - b_min) * pow(r_ce_a1, alpha_case_study_expert);
formula utility_ce_a1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_ce_a1, alpha_case_study_expert);
formula utility_ce_a1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_ce_a1, alpha_case_study_expert);

formula r_ce_a2 = (prompt_accepted_a2_ce + alpha0) / (prompt_accepted_a2_ce + prompt_rejected_a2_ce + alpha0 + beta0);
formula utility_ce_a2_match = b_min + (b_max - b_min) * pow(r_ce_a2, alpha_case_study_expert);
formula utility_ce_a2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_ce_a2, alpha_case_study_expert);
formula utility_ce_a2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_ce_a2, alpha_case_study_expert);

formula r_ce_b1 = (prompt_accepted_b1_ce + alpha0) / (prompt_accepted_b1_ce + prompt_rejected_b1_ce + alpha0 + beta0);
formula utility_ce_b1_match = b_min + (b_max - b_min) * pow(r_ce_b1, alpha_case_study_expert);
formula utility_ce_b1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_ce_b1, alpha_case_study_expert);
formula utility_ce_b1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_ce_b1, alpha_case_study_expert);

formula r_ce_b2 = (prompt_accepted_b2_ce + alpha0) / (prompt_accepted_b2_ce + prompt_rejected_b2_ce + alpha0 + beta0);
formula utility_ce_b2_match = b_min + (b_max - b_min) * pow(r_ce_b2, alpha_case_study_expert);
formula utility_ce_b2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_ce_b2, alpha_case_study_expert);
formula utility_ce_b2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_ce_b2, alpha_case_study_expert);

formula r_ce_c1 = (prompt_accepted_c1_ce + alpha0) / (prompt_accepted_c1_ce + prompt_rejected_c1_ce + alpha0 + beta0);
formula utility_ce_c1_match = b_min + (b_max - b_min) * pow(r_ce_c1, alpha_case_study_expert);
formula utility_ce_c1_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_ce_c1, alpha_case_study_expert);
formula utility_ce_c1_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_ce_c1, alpha_case_study_expert);

formula r_ce_c2 = (prompt_accepted_c2_ce + alpha0) / (prompt_accepted_c2_ce + prompt_rejected_c2_ce + alpha0 + beta0);
formula utility_ce_c2_match = b_min + (b_max - b_min) * pow(r_ce_c2, alpha_case_study_expert);
formula utility_ce_c2_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_ce_c2, alpha_case_study_expert);
formula utility_ce_c2_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_ce_c2, alpha_case_study_expert);

formula r_ce_c3 = (prompt_accepted_c3_ce + alpha0) / (prompt_accepted_c3_ce + prompt_rejected_c3_ce + alpha0 + beta0);
formula utility_ce_c3_match = b_min + (b_max - b_min) * pow(r_ce_c3, alpha_case_study_expert);
formula utility_ce_c3_okay = b_min + kappa_okay * (b_max - b_min) * pow(r_ce_c3, alpha_case_study_expert);
formula utility_ce_c3_mismatch = b_min + kappa_mismatch * (b_max - b_min) * pow(r_ce_c3, alpha_case_study_expert);

rewards "acceptance"
[select_prompt_a1] profile=non_expert & attention=high & under=high: utility_non_a1_match;
[select_prompt_a1] profile=non_expert & attention=high & under=low: utility_non_a1_match;
[select_prompt_a1] profile=non_expert & attention=low & under=high: utility_non_a1_mismatch;
[select_prompt_a1] profile=non_expert & attention=low & under=low: utility_non_a1_mismatch;
[select_prompt_a2] profile=non_expert & attention=high & under=high: utility_non_a2_okay;
[select_prompt_a2] profile=non_expert & attention=high & under=low: utility_non_a2_okay;
[select_prompt_a2] profile=non_expert & attention=low & under=high: utility_non_a2_match;
[select_prompt_a2] profile=non_expert & attention=low & under=low: utility_non_a2_match;
[select_prompt_b1] profile=non_expert & attention=high & under=high: utility_non_b1_okay;
[select_prompt_b1] profile=non_expert & attention=high & under=low: utility_non_b1_mismatch;
[select_prompt_b1] profile=non_expert & attention=low & under=high: utility_non_b1_okay;
[select_prompt_b1] profile=non_expert & attention=low & under=low: utility_non_b1_mismatch;
[select_prompt_b2] profile=non_expert & attention=high & under=high: utility_non_b2_match;
[select_prompt_b2] profile=non_expert & attention=high & under=low: utility_non_b2_match;
[select_prompt_b2] profile=non_expert & attention=low & under=high: utility_non_b2_okay;
[select_prompt_b2] profile=non_expert & attention=low & under=low: utility_non_b2_okay;
[select_prompt_c1] profile=non_expert & attention=high & under=high: utility_non_c1_match;
[select_prompt_c1] profile=non_expert & attention=high & under=low: utility_non_c1_match;
[select_prompt_c1] profile=non_expert & attention=low & under=high: utility_non_c1_mismatch;
[select_prompt_c1] profile=non_expert & attention=low & under=low: utility_non_c1_mismatch;
[select_prompt_c2] profile=non_expert & attention=high & under=high: utility_non_c2_mismatch;
[select_prompt_c2] profile=non_expert & attention=high & under=low: utility_non_c2_mismatch;
[select_prompt_c2] profile=non_expert & attention=low & under=high: utility_non_c2_okay;
[select_prompt_c2] profile=non_expert & attention=low & under=low: utility_non_c2_match;
[select_prompt_c3] profile=non_expert & attention=high & under=high: utility_non_c3_match;
[select_prompt_c3] profile=non_expert & attention=high & under=low: utility_non_c3_okay;
[select_prompt_c3] profile=non_expert & attention=low & under=high: utility_non_c3_match;
[select_prompt_c3] profile=non_expert & attention=low & under=low: utility_non_c3_okay;
[select_prompt_a1] profile=planning_expert & attention=high & under=high: utility_pe_a1_match;
[select_prompt_a1] profile=planning_expert & attention=high & under=low: utility_pe_a1_match;
[select_prompt_a1] profile=planning_expert & attention=low & under=high: utility_pe_a1_okay;
[select_prompt_a1] profile=planning_expert & attention=low & under=low: utility_pe_a1_okay;
[select_prompt_a2] profile=planning_expert & attention=high & under=high: utility_pe_a2_mismatch;
[select_prompt_a2] profile=planning_expert & attention=high & under=low: utility_pe_a2_mismatch;
[select_prompt_a2] profile=planning_expert & attention=low & under=high: utility_pe_a2_match;
[select_prompt_a2] profile=planning_expert & attention=low & under=low: utility_pe_a2_match;
[select_prompt_b1] profile=planning_expert & attention=high & under=high: utility_pe_b1_match;
[select_prompt_b1] profile=planning_expert & attention=high & under=low: utility_pe_b1_okay;
[select_prompt_b1] profile=planning_expert & attention=low & under=high: utility_pe_b1_match;
[select_prompt_b1] profile=planning_expert & attention=low & under=low: utility_pe_b1_okay;
[select_prompt_b2] profile=planning_expert & attention=high & under=high: utility_pe_b2_mismatch;
[select_prompt_b2] profile=planning_expert & attention=high & under=low: utility_pe_b2_match;
[select_prompt_b2] profile=planning_expert & attention=low & under=high: utility_pe_b2_mismatch;
[select_prompt_b2] profile=planning_expert & attention=low & under=low: utility_pe_b2_match;
[select_prompt_c1] profile=planning_expert & attention=high & under=high: utility_pe_c1_match;
[select_prompt_c1] profile=planning_expert & attention=high & under=low: utility_pe_c1_okay;
[select_prompt_c1] profile=planning_expert & attention=low & under=high: utility_pe_c1_mismatch;
[select_prompt_c1] profile=planning_expert & attention=low & under=low: utility_pe_c1_mismatch;
[select_prompt_c2] profile=planning_expert & attention=high & under=high: utility_pe_c2_match;
[select_prompt_c2] profile=planning_expert & attention=high & under=low: utility_pe_c2_match;
[select_prompt_c2] profile=planning_expert & attention=low & under=high: utility_pe_c2_okay;
[select_prompt_c2] profile=planning_expert & attention=low & under=low: utility_pe_c2_okay;
[select_prompt_c3] profile=planning_expert & attention=high & under=high: utility_pe_c3_mismatch;
[select_prompt_c3] profile=planning_expert & attention=high & under=low: utility_pe_c3_mismatch;
[select_prompt_c3] profile=planning_expert & attention=low & under=high: utility_pe_c3_match;
[select_prompt_c3] profile=planning_expert & attention=low & under=low: utility_pe_c3_okay;
[select_prompt_a1] profile=case_study_expert & attention=high & under=high: utility_ce_a1_match;
[select_prompt_a1] profile=case_study_expert & attention=high & under=low: utility_ce_a1_match;
[select_prompt_a1] profile=case_study_expert & attention=low & under=high: utility_ce_a1_okay;
[select_prompt_a1] profile=case_study_expert & attention=low & under=low: utility_ce_a1_okay;
[select_prompt_a2] profile=case_study_expert & attention=high & under=high: utility_ce_a2_okay;
[select_prompt_a2] profile=case_study_expert & attention=high & under=low: utility_ce_a2_okay;
[select_prompt_a2] profile=case_study_expert & attention=low & under=high: utility_ce_a2_mismatch;
[select_prompt_a2] profile=case_study_expert & attention=low & under=low: utility_ce_a2_mismatch;
[select_prompt_b1] profile=case_study_expert & attention=high & under=high: utility_ce_b1_match;
[select_prompt_b1] profile=case_study_expert & attention=high & under=low: utility_ce_b1_okay;
[select_prompt_b1] profile=case_study_expert & attention=low & under=high: utility_ce_b1_match;
[select_prompt_b1] profile=case_study_expert & attention=low & under=low: utility_ce_b1_okay;
[select_prompt_b2] profile=case_study_expert & attention=high & under=high: utility_ce_b2_okay;
[select_prompt_b2] profile=case_study_expert & attention=high & under=low: utility_ce_b2_mismatch;
[select_prompt_b2] profile=case_study_expert & attention=low & under=high: utility_ce_b2_okay;
[select_prompt_b2] profile=case_study_expert & attention=low & under=low: utility_ce_b2_mismatch;
[select_prompt_c1] profile=case_study_expert & attention=high & under=high: utility_ce_c1_okay;
[select_prompt_c1] profile=case_study_expert & attention=high & under=low: utility_ce_c1_match;
[select_prompt_c1] profile=case_study_expert & attention=low & under=high: utility_ce_c1_mismatch;
[select_prompt_c1] profile=case_study_expert & attention=low & under=low: utility_ce_c1_mismatch;
[select_prompt_c2] profile=case_study_expert & attention=high & under=high: utility_ce_c2_mismatch;
[select_prompt_c2] profile=case_study_expert & attention=high & under=low: utility_ce_c2_mismatch;
[select_prompt_c2] profile=case_study_expert & attention=low & under=high: utility_ce_c2_okay;
[select_prompt_c2] profile=case_study_expert & attention=low & under=low: utility_ce_c2_okay;
[select_prompt_c3] profile=case_study_expert & attention=high & under=high: utility_ce_c3_match;
[select_prompt_c3] profile=case_study_expert & attention=high & under=low: utility_ce_c3_match;
[select_prompt_c3] profile=case_study_expert & attention=low & under=high: utility_ce_c3_okay;
[select_prompt_c3] profile=case_study_expert & attention=low & under=low: utility_ce_c3_okay;
endrewards
